@model ML.Orders
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <h2>Usuario</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <h5>Ingrese los datos del usuario</h5>
            <hr />
        </div>
    </div>

    @using (Html.BeginForm("Formulario", "Orders", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
    {
        <div class="row">
            <input type="hidden" name="IdOrder" value="@Model.IdOrder" />

            <div class="col-12 col-md-6 col-lg-4 mb-3">
                @Html.LabelFor(model => model.User.IdUser, new { @id = "ddlUser", @class = "form-label" })
                <div class="input-group mb-3 has-validation" required>
                    <span class="input-group-text bi bi-list" id="basic-addon1"></span>
                    @Html.DropDownListFor(model => model.User.IdUser,
                             new SelectList(Model.User.Usuarios, "IdUser", "Nombre"),
                             "-- Seleccione un User --",
                             new { required = "required", @class = "form-control", @onkeypress = "DesactivarEnter(event)" })
                </div>
                @Html.ValidationMessageFor(model => model.User.IdUser, "", new { @id = "lblErrorUser", @class = "text-danger" })
            </div>
            <div class="col-12 col-md-6 col-lg-4 mb-3">
                @Html.LabelFor(model => model.Truck.IdTruck, new { @id = "ddlTruck", @class = "form-label" })
                <div class="input-group mb-3 has-validation" required>
                    <span class="input-group-text bi bi-list" id="basic-addon1"></span>
                    @Html.DropDownListFor(model => model.Truck.IdTruck,
                             new SelectList(Model.Truck.Camionetas, "IdTruck", "Year"),
                             "-- Seleccione una Truck --",
                             new { required = "required", @class = "form-control", @onkeypress = "DesactivarEnter(event)" })
                </div>
                @Html.ValidationMessageFor(model => model.Truck.IdTruck, "", new { @id = "lblErrorTruck", @class = "text-danger" })
            </div>
            <div class="col-12 col-md-6 col-lg-4 mb-3">
                @Html.LabelFor(model => model.LocationPick.IdLocation, new { @id = "ddlPick", @class = "form-label" })
                <div class="input-group mb-3 has-validation" required>
                    <span class="input-group-text bi bi-list" id="basic-addon1"></span>
                    @Html.DropDownListFor(model => model.LocationPick.IdLocation,
                             new SelectList(Model.LocationPick.Locaciones, "IdLocation", "address"),
                             "-- Seleccione una Location --",
                             new { required = "required", @class = "form-control", @onkeypress = "DesactivarEnter(event)" })
                </div>
                @Html.ValidationMessageFor(model => model.LocationPick.IdLocation, "", new { @id = "lblErrorPick", @class = "text-danger" })
            </div>

            <div class="row">
                <div class="col-12 col-md-6 col-lg-4 mb-3">
                    @Html.LabelFor(model => model.LocationDrop.IdLocation, new { @id = "ddlDrop", @class = "form-label" })
                    <div class="input-group mb-3 has-validation" required>
                        <span class="input-group-text bi bi-list" id="basic-addon1"></span>
                        @Html.DropDownListFor(model => model.LocationDrop.IdLocation,
                                 new SelectList(Model.LocationDrop.Locaciones, "IdLocation", "address"),
                                 "-- Seleccione una Location --",
                                 new { required = "required", @class = "form-control", @onkeypress = "DesactivarEnter(event)" })
                    </div>
                    @Html.ValidationMessageFor(model => model.LocationDrop.IdLocation, "", new { @id = "lblErrorRol", @class = "text-danger" })
                </div>
                @if(Model.IdOrder > 0)
                {
                    <div class="col-12 col-md-6 col-lg-4 mb-3">
                        @Html.LabelFor(model => model.Status.IdStatus, new { @id = "ddlDrop", @class = "form-label" })
                        <div class="input-group mb-3 has-validation" required>
                            <span class="input-group-text bi bi-list" id="basic-addon1"></span>
                            @Html.DropDownListFor(model => model.Status.IdStatus,
                                     new SelectList(Model.Status.Statues, "IdStatus", "Nombre"),
                                     "-- Seleccione una Location --",
                                     new { required = "required", @class = "form-control", @onkeypress = "DesactivarEnter(event)" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Status.IdStatus, "", new { @id = "lblErrorRol", @class = "text-danger" })
                    </div>
                }
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-12">
                <input type="submit" value="Guardar" class="btn btn-success" id="btnGuardar" onclick="ValidarCampos()" />
            </div>

            <div class="col-12">
                @Html.ActionLink("Regresar", "GetAll", "Orders", new { @class = "btn btn-danger" })
            </div>


            @if (TempData["Actualizado"] != null)
            {
                <div class="alert alert-success">
                    <i class="bi bi-send"> @TempData["Actualizado"]</i>
                </div>
            }

        </div>
        }

</div>

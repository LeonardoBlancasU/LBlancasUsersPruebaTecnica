@model ML.Trucks
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <h2>Truck</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <h5>Ingrese los datos de la Truck</h5>
            <hr />
        </div>
    </div>

    @using (Html.BeginForm("Formulario", "Truck", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
    {
        <div class="row">
            <input type="hidden" name="IdTruck" value="@Model.IdTruck" />
            <div class="col-12 col-md-6 col-lg-4 mb-3">
                @Html.LabelFor(model => model.Year, new { @class = "form-label" })
                <div class="input-group mb-3 has-validation">
                    <span class="input-group-text bi bi-telephone-fill" id="basic-addon1"></span>
                    @Html.TextBoxFor(model => model.Year, new { minlength = "10", required = "required", placeholder = "Ingresa el Año", @class = "form-control", @id = "txtNumero", @onkeypress = "return ValidarSoloNumeros(event, 'lblErrorYear')" })
                </div>
                @Html.ValidationMessageFor(model => model.Year, "", new { @id = "lblErrorYear", @class = "text-danger" })
            </div>
            <div class="col-12 col-md-6 col-lg-4 mb-3">
                @Html.LabelFor(model => model.Color, new { @class = "form-label", @for = "txtColor" })
                <div class="input-group mb-3 has-validation">
                    <span class="input-group-text bi bi-clipboard-fill" id="basic-addon1"></span>
                    @Html.TextBoxFor(model => model.Color, new { maxlength = "50", required = "required", placeholder = "Ingresa el Color", @class = "form-control", @id = "txtColor", @onkeypress = "return ValidarSoloLetras(event, 'lblErrorColor')" })
                </div>
                @Html.ValidationMessageFor(model => model.Color, "", new { @id = "lblErrorColor", @class = "text-danger" })
            </div>
            <div class="col-12 col-md-6 col-lg-4 mb-3">
                @Html.LabelFor(model => model.Plates, new { @class = "form-label" })
                <div class="input-group mb-3 has-validation">
                    <span class="input-group-text bi bi-pen-fill" id="basic-addon1"></span>
                    @Html.TextBoxFor(model => model.Plates, new { required = "required", placeholder = "Ingresa la Placa", @class = "form-control", @id = "txtPlates", @onkeypress = "return ValidarNumeroLetrasMay(event, 'lblErrorPlates')" })
                </div>
                <label class="text-danger" id="lblErrorPlates"></label>
                @if (ViewBag.UserNameError != null)
                {
                    <span class="text-danger">@ViewBag.PlatesError</span>
                }
                @Html.ValidationMessageFor(model => model.Plates, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-12">
                <input type="submit" value="Guardar" class="btn btn-success" id="btnGuardar" onclick="ValidarCampos()" />
            </div>

            <div class="col-12">
                @Html.ActionLink("Regresar", "GetAll", "Usuario", new { @class = "btn btn-danger" })
            </div>


            @if (TempData["Actualizado"] != null)
            {
                <div class="alert alert-success">
                    <i class="bi bi-send"> @TempData["Actualizado"]</i>
                </div>
            }

        </div>

    }
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/Truck/Validaciones.js"></script>

